###############################################
@gen_question = (user, job_id) ->
	question =
		num_reviews: 2

	if job_id
		question.job_ids = [job_id]
		job = Jobs.findOne(job_id)
		if not job
			throw new Meteor.Error "Job not found."

	res = store_document_unprotected Questions, question, user, true
	msg = "Question (" + question._id + ") generated by: " + get_user_mail user
	log_event msg, event_logic, event_info

	if not job
		return res

	tmp_question_ids = job.question_ids

	if not tmp_question_ids
		tmp_question_ids = []

	tmp_question_ids.push(res)

	modify_field_unprotected Jobs, job_id, "question_ids", tmp_question_ids

	return res

###############################################
@bake_question = (user, title, content, link, origin, job_id) ->
	question =
		num_reviews: 2
		title: title
		content: content
		link: link
		origin: origin

	if job_id
		question.job_ids = [job_id]
		job = Jobs.findOne(job_id)
		if not job
			throw new Meteor.Error "Job not found."

	res = store_document_unprotected Questions, question, user, true
	msg = "Question (" + question._id + ") generated by: " + get_user_mail user
	log_event msg, event_logic, event_info

	if not job
		return res

	tmp_question_ids = job.question_ids

	if not tmp_question_ids
		tmp_question_ids = []

	tmp_question_ids.push(res)

	modify_field_unprotected Jobs, job_id, "question_ids", tmp_question_ids

	return res

###############################################
@finish_question = (question, user) ->
	modify_field_unprotected Questions, question._id, "published", true
	modify_field_unprotected Questions, question._id, "visible_to", "anonymous"

	#TODO: inform last round participants

	msg = "Question (" + question._id + ") published by: " + get_user_mail user
	log_event msg, event_logic, event_info

	return question._id
